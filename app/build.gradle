plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id "dagger.hilt.android.plugin"
    id "androidx.navigation.safeargs"
    id "org.jlleitschuh.gradle.ktlint"
}

android {
    namespace 'com.ukaka.farmerregistration'
    compileSdk 33

    defaultConfig {
        applicationId "com.ukaka.farmerregistration"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    configurations.all {
        exclude group: 'xxp3', module: 'xxp3'
        exclude group: 'org.simpleframework'
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures{
        dataBinding = true //required by ITEX
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.32"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    //Material Design
    implementation "com.google.android.material:material:$materialDesign"

    /*Intuit*/
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    //Loading indicators
    implementation "com.wang.avi:library:$wangLoading"

    //PowerSpinner
    implementation "com.github.skydoves:powerspinner:1.1.7"

    //Kotlin Coroutines NB: DON'T UPGRADE TO 1.3.7 TO AVOID VERIFIER BUG, WAIT TILL 1.4.0
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    //Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"

    //Moshi Converter for Retrofit
    implementation "com.squareup.retrofit2:converter-moshi:$moshiConverter"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"

    //Room components
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    //Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //MotionToast
    implementation 'com.github.Spikeysanju:MotionToast:1.4'

    //Animated Checkbox
    implementation "it.emperor.animatedcheckbox:animatedcheckbox:$animatedCheckbox"

    //EasyPrefs
    implementation "com.github.kishandonga:EasyPrefs:1.1"

//    /*Libraries needed for ITEX integration*/
//    //itex lib
//    implementation project(':amp-purchase-lib')

    //RXJava and RXAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"

    //MultiDex
    implementation "androidx.multidex:multidex:$multidex"
    //ANKO
    implementation "org.jetbrains.anko:anko-commons:$anko"

    //Reactive Streams
    implementation "android.arch.lifecycle:reactivestreams:$reactiveStreams"

    // Retrofit XML converter
    implementation "com.squareup.retrofit2:converter-simplexml:$retrofitXml"

    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    implementation "com.google.code.gson:gson:$gson"

    //Architecture LifeCycle
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata:$archLifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$archLifecycleVersion"

    implementation "net.danlew:android.joda:$joda"

    implementation 'androidx.work:work-runtime-ktx:2.7.0'

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptor"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.50"

    //navigation component
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"

    //data store
    implementation "androidx.datastore:datastore-preferences:$dataStoreVersion"

    //Gif
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.17'

    //Mockito
    testImplementation 'org.mockito.kotlin:mockito-kotlin:3.2.0'
    testImplementation "io.mockk:mockk:1.12.2"

    // Truth
    def truth_version = "1.1.3"
    testImplementation "com.google.truth:truth:$truth_version"
    androidTestImplementation "com.google.truth:truth:$truth_version"
}